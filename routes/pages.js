const express = require('express');
const path = require('path');
const { checkAdminAuth } = require('../middleware/auth');
const router = express.Router();

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
router.get('/', (req, res) => {
    const isAuthenticated = req.session.authenticated && req.session.user === process.env.ADMIN_USER;
    
    // –ß–∏—Ç–∞–µ–º HTML —Ñ–∞–π–ª –∏ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º –µ–≥–æ
    const fs = require('fs');
    const filePath = path.join(__dirname, '..', 'public', 'index.html');
    
    fs.readFile(filePath, 'utf8', (err, data) => {
        if (err) {
            return res.status(500).send('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
        }
        
        let html = data;
        
        if (isAuthenticated) {
            // –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö
            html = html.replace(
                '<p>–õ—É—á—à–∏–µ –ª–æ–∫–∞—Ü–∏–∏ –¥–ª—è –≤–∞—à–µ–≥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è</p>',
                '<p>–õ—É—á—à–∏–µ –ª–æ–∫–∞—Ü–∏–∏ –¥–ª—è –≤–∞—à–µ–≥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è</p><div style="text-align: center; margin-top: 1rem;"><a href="/admin" style="color: white; text-decoration: underline; font-size: 1.1rem;">üîê –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</a></div>'
            );
        }
        
        res.send(html);
    });
});

// –°—Ç—Ä–∞–Ω–∏—Ü—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
router.get('/admin-login', (req, res) => {
    res.sendFile(path.join(__dirname, '..', 'public', 'admin-login.html'));
});

router.get('/auth', (req, res) => {
    res.sendFile(path.join(__dirname, '..', 'public', 'admin-login.html'));
});

router.get('/login', (req, res) => {
    res.sendFile(path.join(__dirname, '..', 'public', 'admin-login.html'));
});

// –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å - –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
router.get('/admin', checkAdminAuth, (req, res) => {
    res.sendFile(path.join(__dirname, '..', 'public', 'admin.html'));
});

router.get('/dashboard', checkAdminAuth, (req, res) => {
    res.sendFile(path.join(__dirname, '..', 'public', 'admin.html'));
});

// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã - —Ä–∞–∑—Ä–µ—à–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ CSS, JS, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º
router.get('/public/*', (req, res, next) => {
    const allowedExtensions = ['.css', '.js', '.png', '.jpg', '.jpeg', '.webp', '.svg', '.ico'];
    const fileExtension = path.extname(req.path).toLowerCase();
    
    if (allowedExtensions.includes(fileExtension)) {
        // –†–∞–∑—Ä–µ—à–∞–µ–º Express static middleware –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–∞–π–ª
        express.static('public')(req, res, next);
    } else {
        res.status(403).send('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω');
    }
});

// –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º —Ñ–∞–π–ª–∞–º
router.get('*.json', (req, res) => {
    res.status(403).sendFile(path.join(__dirname, '..', 'public', '403.html'));
});

router.get('/data/*', (req, res) => {
    res.status(403).sendFile(path.join(__dirname, '..', 'public', '403.html'));
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ 404 - –¥–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
router.get('*', (req, res) => {
    res.status(404).sendFile(path.join(__dirname, '..', 'public', '404.html'));
});

module.exports = router;